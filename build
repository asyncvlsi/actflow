#!/bin/sh

if [ x$ACT_HOME = x ]
then
	echo "Please set the environment variable ACT_HOME to the install directory"
        exit 1
fi

cmake_build() {
  dir=$1
  echo 
  echo "#### Building and installing package: $1 ####"
  echo
  (cd $dir; if [ ! -d build ]; then mkdir build; fi; cd build; cmake -DCMAKE_INSTALL_PREFIX=$ACT_HOME -DCMAKE_LIBRARY_PATH=$ACT_HOME/lib -DCMAKE_INCLUDE_PATH=$ACT_HOME/include -DCMAKE_EXE_LINKER_FLAGS=-Wl,-rpath,'$ORIGIN/../lib' -DCMAKE_SHARED_LINKER_FLAGS=-Wl,-rpath,'$ORIGIN/../lib' -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. && make && make install ) || exit 1
}

cmake_build_test() {
  dir=$1
  echo 
  echo "#### Building and installing package: $1 ####"
  echo
  (cd $dir; if [ ! -d build ]; then mkdir build; fi; cd build; cmake -DCMAKE_INSTALL_PREFIX=$ACT_HOME -DCMAKE_LIBRARY_PATH=$ACT_HOME/lib -DCMAKE_INCLUDE_PATH=$ACT_HOME/include -DCMAKE_EXE_LINKER_FLAGS=-Wl,-rpath,'$ORIGIN/../lib' -DCMAKE_SHARED_LINKER_FLAGS=-Wl,-rpath,'$ORIGIN/../lib' -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. && make && make install && CTEST_OUTPUT_ON_FAILURE=TRUE make test ) || exit 1
}

cmake_build_test_bipart() {
  dir=BiPart
  echo
  echo "#### Building and installing package: Bipart ####"
  echo
  (cd BiPart; if [ ! -d build ]; then mkdir build; fi; cd build; LEF_ROOT=$ACT_HOME GALOIS_INCLUDE=$ACT_HOME/include GALOIS_LIB=$ACT_HOME/lib DEF_ROOT=$ACT_HOME cmake -DCMAKE_INSTALL_PREFIX=$ACT_HOME -DCMAKE_LIBRARY_PATH=$ACT_HOME/lib -DCMAKE_INCLUDE_PATH=$ACT_HOME/include -DCMAKE_EXE_LINKER_FLAGS=-Wl,-rpath,'$ORIGIN/../lib' -DCMAKE_SHARED_LINKER_FLAGS=-Wl,-rpath,'$ORIGIN/../lib' -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON ..  && make && make install && CTEST_OUTPUT_ON_FAILURE=TRUE make test ) || exit 1
}

#
# Apply patches
#
echo "Applying patch to Galois library..."
if [ ! -f patched ]
then
   (cd Galois; 
     patch -p0 < ../extra/Galois;
     patch -p0 < ../extra/Galois2;
     patch -p0 < ../extra/Galois3;
     patch -p0 < ../extra/Galois4
   )
   touch patched
fi

#
# Build and install the ACT library
#
echo
echo "####  Building and installing the core ACT library ####"
echo
export VLSI_TOOLS_SRC=`pwd`/act
(cd act; ./configure $ACT_HOME CFLAGS="-I${ACT_HOME}/include -L${ACT_HOME}/lib"; ./build; make install) || exit 1

#
# Build and install the Galois library
#
cmake_build_test Galois
if [ -f $ACT_HOME/lib64/libgalois_shmem.a -a ! -f $ACT_HOME/lib/libgalois_shmem.a ]
then
   (cd $ACT_HOME/lib/; ln -s ../lib64/libgalois_shmem.a libgalois_shmem.a)
fi

#
# Build and install the LEF/DEF library
#
echo
echo "####  Building and installing the LEF/DEF parser ####"
echo
(cd lefdef; make && make install) || exit 1

#
# Build and install... 

# phyDB
cmake_build_test phyDB

# layout
echo
echo "#### Building layout ####"
echo
(cd layout; make depend && make && make install) || exit 1

# BiPart
cmake_build_test_bipart

# Dali
cmake_build Dali

# PWRoute
cmake_build_test PWRoute

# SPRoute
cmake_build_test SPRoute

# TritonRoute-WXL
cmake_build TritonRoute-WXL

# interact
echo
echo "#### Building interact ####"
echo
(cd interact; ./configure; make depend && make && make install) || exit 1

# stdlib
echo 
echo "#### Installing ACT std lib ####"
echo
(cd stdlib; make install) || exit 1


# expropt
echo
echo "#### Building expropt ####"
echo
(cd expropt; ./configure; make depend && make && make install) || exit 1

#
# chp2prs
echo
echo "#### Building chp2prs ####"
echo
(cd chp2prs; ./configure; make depend && make && make install) || exit 1

#
# dflowmap
echo
echo "#### Building dflowmap ####"
echo
(cd dflowmap; ./configure; cd ..; cmake_build dflowmap) || exit 1

# actsim
echo 
echo "#### Building actsim ####"
echo 
if [ -f ${ACT_HOME}/include/xyce.in ]; then cp ${ACT_HOME}/include/xyce.in actsim/; fi
(cd actsim; ./configure; make depend && make && make install) || exit 1
